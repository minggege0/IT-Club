
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.1"></script>
    <!-- 引入样式 -->
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <!-- 引入组件库 -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <style>
        .el-header, .el-footer {
            background-color: #20a0ff;
            color: #333;
            text-align: center;
            line-height: 60px;
        }
        .el-aside {
            background-color: #D3DCE6;
            color: #333;
            text-align: center;
            line-height: 200px;
            height: 680px;
        }
        .el-main {
            background-color: #E9EEF3;
            color: #333;
        }
        body > .el-container {
            margin-bottom: 40px;
        }
        .el-container:nth-child(5) .el-aside,
        .el-container:nth-child(6) .el-aside {
            line-height: 260px;
        }
        .el-container:nth-child(7) .el-aside {
            line-height: 320px;
        }
        .el-select .el-input {
            width: 130px;
        }
        .input-with-select {
            width: 500px;
        }
            .input-with-select .el-input-group__prepend {
                background-color: #fff;
            }
        .el-btn-add {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div id="app">
        <el-container>
            <el-header>IT Club</el-header>
            <el-container>
                <el-aside width="210px">
                    <el-menu default-active="2"
                             class="el-menu-vertical-demo"
                             v-on:open="handleOpen"
                             v-on:close="handleClose"
                             background-color="#545c64"
                             text-color="#fff"
                             active-text-color="#ffd04b">
                        <el-submenu index="1">
                            <template slot="title">
                                <i class="el-icon-location"></i>
                                <span>导航一</span>
                            </template>
                            <el-menu-item-group>
                                <template slot="title">
                                    分组一
                                </template>
                                <el-menu-item index="1-1">选项1</el-menu-item>
                                <el-menu-item index="1-2">选项2</el-menu-item>
                            </el-menu-item-group>
                            <el-menu-item-group title="分组2">
                                <el-menu-item index="1-3">选项3</el-menu-item>
                            </el-menu-item-group>
                            <el-submenu index="1-4">
                                <template slot="title">
                                    选项4
                                </template>
                                <el-menu-item index="1-4-1">选项1</el-menu-item>
                            </el-submenu>
                        </el-submenu>
                        <el-menu-item index="2">
                            <i class="el-icon-menu"></i>
                            <span slot="title">导航二</span>
                        </el-menu-item>
                        <el-menu-item index="3">
                            <i class="el-icon-document"></i>
                            <span slot="title">导航三</span>
                        </el-menu-item>
                        <el-menu-item index="4">
                            <i class="el-icon-setting"></i>
                            <span slot="title">导航四</span>
                        </el-menu-item>
                    </el-menu>
                </el-aside>
                <el-container>
                    <el-main>
                        <el-input placeholder="请输入内容" v-model="input" class="input-with-select">
                            <el-select v-model="selectvalue" slot="prepend" placeholder="请选择" v-on:change="obtainvalue">
                                <el-option v-for="item in options"
                                           :label="item.label"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                            <el-button slot="append" icon="el-icon-search" v-on:click="search"></el-button>
                        </el-input>
                        <el-button type="primary" class="el-btn-add" v-on:click="addDialogVisible=true">新增用户</el-button>
                        <template>
                            <el-table :data="message">
                                <el-table-column prop="UserID"
                                                 label="用户编号"
                                                 width="120">
                                </el-table-column>
                                <el-table-column prop="UserName"
                                                 label="用户名"
                                                 width="120">
                                </el-table-column>
                                <el-table-column prop="UserPwd"
                                                 label="用户密码"
                                                 width="120">
                                </el-table-column>
                                <el-table-column prop="QQ"
                                                 label="用户QQ"
                                                 width="120">
                                </el-table-column>
                                <el-table-column prop="Phone"
                                                 label="用户手机"
                                                 width="120">
                                </el-table-column>
                                <el-table-column prop="Address"
                                                 label="用户籍贯"
                                                 width="120">
                                </el-table-column>
                                <el-table-column label="注册时间"
                                                 width="190">
                                    <template slot-scope="scope">
                                        <i class="el-icon-time"></i>
                                        <span style="margin-left: 3px">{{ scope.row.CreateTime }}</span>
                                    </template>
                                </el-table-column>
                                <el-table-column prop="UserStatus"
                                                 label="用户状态"
                                                 width="100">
                                </el-table-column>
                                <el-table-column label="操作">
                                    <template slot-scope="scope">
                                        <!--scope.$index,scope.row.UserID,scope.row.UserName,scope.row.QQ,scope.row.Phone,scope.row.Address-->
                                        <el-button size="mini"
                                                   type="success"
                                                   v-on:click="modify(scope.$index,scope.row)">编辑</el-button>
                                        <el-button size="mini"
                                                   type="danger"
                                                   v-on:click="del(scope.$index,scope.row.UserID)">删除</el-button>
                                    </template>
                                </el-table-column>
                            </el-table>
                        </template>
                        <div class="block">
                            <el-pagination background
                                           v-on:size-change="handleSizeChange"
                                           v-on:current-change="handleCurrentChange"
                                           :current-page="currentPage"
                                           :page-sizes="pagesizes"
                                           layout="total, sizes, prev, pager, next, jumper"
                                           :total=total>
                            </el-pagination>
                        </div>
                    </el-main>
                    <el-footer>Footer</el-footer>
                </el-container>
            </el-container>
        </el-container>
        <el-dialog title="修改"
                   :visible.sync="centerDialogVisible"
                   width="30%"
                   center>
            <el-form :model="form">
                <el-form-item label="用户名：" :label-width="formLabelWidth">
                    <el-input v-model="form.name" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="用户密码：" :label-width="formLabelWidth">
                    <el-input v-model="form.pwd" autocomplete="off" type="password" disabled="disabled"></el-input>
                </el-form-item>
                <el-form-item label="QQ：" :label-width="formLabelWidth">
                    <el-input v-model="form.qq" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="手机号：" :label-width="formLabelWidth">
                    <el-input v-model="form.phone" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="籍贯：" :label-width="formLabelWidth">
                    <el-input v-model="form.address" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="注册时间：" :label-width="formLabelWidth">
                    <el-input v-model="form.createtime" autocomplete="off" disabled="disabled"></el-input>
                </el-form-item>
                <el-form-item label="用户状态：" :label-width="formLabelWidth">
                    <el-input v-model="form.userstatus" autocomplete="off" disabled="disabled"></el-input>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
                <el-button v-on:click="centerDialogVisible = false">取 消</el-button>
                <el-button type="primary" v-on:click="determine">确 定</el-button>
            </span>
        </el-dialog>
        <el-dialog title="新增用户"
                   :visible.sync="addDialogVisible"
                   width="30%"
                   center>
            <el-form :model="form">
                <el-form-item label="用户名：" :label-width="formLabelWidth">
                    <el-input v-model="addform.name" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="用户密码：" :label-width="formLabelWidth">
                    <el-input v-model="addform.pwd" autocomplete="off" type="password"></el-input>
                </el-form-item>
                <el-form-item label="QQ：" :label-width="formLabelWidth">
                    <el-input v-model="addform.qq" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="手机号：" :label-width="formLabelWidth">
                    <el-input v-model="addform.phone" autocomplete="off"></el-input>
                </el-form-item>
                <el-form-item label="籍贯：" :label-width="formLabelWidth">
                    <el-input v-model="addform.address" autocomplete="off"></el-input>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
                <el-button v-on:click="addDialogVisible = false">取 消</el-button>
                <el-button type="primary" v-on:click="add">新增</el-button>
            </span>
        </el-dialog>
    </div>
    <script>
        var Main = {
            data() {
                return {
                    message: [],
                    index: -1,
                    selectvalue: "全部",
                    total: 2,
                    pagesizes: [1, 2, 3, 4],
                    pagesize: 1,
                    centerDialogVisible: false,
                    addDialogVisible: false,
                    currentPage: 1,
                    form: {
                        "id": "",
                        "name": "",
                        "pwd": "",
                        "qq": "",
                        "phone": "",
                        "address": "",
                        "createtime": "",
                        "userstatus": ""
                    },
                    addform: {
                        "name": "",
                        "pwd": "",
                        "qq": "",
                        "phone": "",
                        "address": "",
                    },
                    formLabelWidth: '120px',
                    input: "",
                    select: '',
                    options: [{ label: "全部", value: 0 }, { label: "用户名", value: 1 }, { label: "用户QQ", value: 2 }, { label: "用户手机", value: 3 }, { label: "用户籍贯", value: 4 }]
                }
            },
            methods: {
                //加载数据
                send() {
                    let pars = {
                        pageindex: this.currentPage,
                        pagesize: this.pagesize
                    }
                    this.pagequery(pars);
                },
                //编辑按钮，从表格传值到弹出框
                modify(index, user) {
                    this.index = index;
                    this.form.id = user.UserID;
                    this.form.name = user.UserName;
                    this.form.pwd = user.UserPwd;
                    this.form.qq = user.QQ;
                    this.form.phone = user.Phone;
                    this.form.address = user.Address;
                    this.form.createtime = user.CreateTime;
                    this.form.userstatus = user.UserStatus;
                    this.centerDialogVisible = true;
                },
                //删除数据
                del(index, userid) {
                    this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning',
                        center: true
                    }).then(() => {
                        this.$http.post("/Home/DeleteEntity", { UserID: userid }, { emulateJSON: true }).then((response) => {
                            if (response) {
                                this.message.splice(index, 1);
                                this.mymessage('success', '删除成功！');
                                let pars = {
                                    pageindex: 1,
                                    pagesize: 1,
                                }
                                this.pagequery(pars);
                                this.currentPage = 1;
                            }
                            else {
                                this.mymessage('warning', '删除失败！');
                            }
                        }).catch((response) => {
                            console.log(response);
                            this.mymessage('warning', '删除失败!');
                        })
                    }).catch(() => {
                        this.mymessage('info', '已取消删除!');
                    });
                },
                //点击弹出框的确定，修改数据
                determine() {
                    console.log(this.form);
                    this.$http.post("/Home/UpdateEntity", { user: this.form, }, { emulateJSON: true }).then((response) => {
                        if (response) {
                            this.message[this.index].UserName = this.form.name;
                            this.message[this.index].QQ = this.form.qq;
                            this.message[this.index].Phone = this.form.phone;
                            this.message[this.index].Address = this.form.address;
                            this.centerDialogVisible = false;
                            this.$message({
                                type: 'success',
                                message: '修改成功!'
                            });
                        }
                        else {
                            this.$message({
                                type: 'error',
                                message: '修改失败!'
                            });
                        }
                    }).catch((response) => {
                        console.log(response);
                        this.mymessage('error', '修改失败');
                    });

                },
                //添加数据
                add() {
                    this.$http.post("/Home/AddEntity", { userinfo: this.addform, }, { emulateJSON: true }).then((response) => {
                        if (response) {
                            let pars = {
                                pageindex: 1,
                                pagesize: 1,
                            }
                            this.pagequery(pars);
                            this.addform = {
                                "name": "",
                                "pwd": "",
                                "qq": "",
                                "phone": "",
                                "address": "",
                            }
                            this.addDialogVisible = false;
                            this.mymessage('success', '新增成功');
                        }
                        else {
                            this.mymessage('error', '新增失败');
                        }
                    }).catch((response) => {
                        console.log(response);
                        this.mymessage('error', '新增失败');
                    });
                },
                //根据分类，模糊查询数据
                search() {
                    let pars = {
                        pageindex: 1,
                        pagesize: 1,
                        selectvalue: this.selectvalue,
                        inputvalue: this.input
                    }
                    this.pagequery(pars);
                    this.currentPage = 1;
                    this.pagesize = 1;
                },
                //分类下拉框的改变事件
                obtainvalue(value) {
                    selectvalue = value;
                },
                //分页组件索引改变时触发的事件
                handleCurrentChange(val) {
                    this.currentPage = val;
                    if (this.input == "") {
                        let pars = {
                            pageindex: val,
                            pagesize: this.pagesize
                        };
                        this.pagequery(pars);
                    } else {
                        let pars = {
                            pageindex: val,
                            pagesize: this.pagesize,
                            selctvalue: this.selectvalue,
                            inputvalue: this.input
                        }
                        this.pagequery(pars);
                    }
                },
                //分页组件Pagesize改变时触发的事件
                handleSizeChange(val) {
                    this.pagesize = val;
                    if (this.input == "") {
                        let pars = {
                            pageindex: this.currentPage,
                            pagesize: val
                        };
                        this.pagequery(pars);
                    }
                    else {
                        let pars = {
                            pageindex: this.currentPage,
                            pagesize: val,
                            selectvalue: this.selectvalue,
                            inputvalue: this.input
                        };
                        this.pagequery(pars);
                    }
                },
                //分页查询的请求方法
                pagequery(pars) {
                    this.$http.post("/Home/Query", { pars }, { emulateJSON: true }).then((response) => {
                        this.total = response.body.total;
                        this.message = response.body.user;
                    }).catch((response) => {
                        console.log(response);
                    });
                },
                //消息提示方法
                mymessage(type, message) {
                    this.$message({
                        type,
                        message
                    });
                },
                handleOpen(key, keyPath) {
                    console.log(key, keyPath);
                },
                handleClose(key, keyPath) {
                    console.log(key, keyPath);
                }

            },
            created: function () {
                this.send();
            },
        }
        var Ctor = Vue.extend(Main)
        new Ctor().$mount('#app')
    </script>
</body>
</html>
